<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="upload_pic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANZSURBVFhH7ZZf
        SFNRHMcX9CDSa8/p3SxlqTSdNcuwEoP+QCBG/tnUTCstNa2IDIVGJf0jfUhINChfwqCsDDFt29XNBdN0
        us1NTSKxhygzKP+hv+5d5+7eu/vT9uDe/MLn5ZzvOZ+ze8+FydbDxTY1FerwTOx0esZT1hJ2T3ZvopEG
        ADY4PZ8qHZ7xeQYIEvOsg3URLR+HZ6wQWRAkxgqJlg8zMSQtinGN2GF0uAsc7lF0PmBGx+1Ey4eZWJQU
        BUza7sFyWwjAaxnMdkSC29WL9gJkkWj5ICUfTrcTlt6EeuUcP3qy0W6gEC0frMTB/lqhnOWXIQXtBgrR
        8sFKQn53qkUHmLTdR3s9A30wFMAdIVo+WEnIiOsjfLOcgRnjYfhiq5PMf7Db4WhNDkSUJkJydRq8t1kl
        HSFEywcrBcrgiBvS7hR45RxJVcfAMjiA9lmIlg9WCoRh9xgU1l8WyTkO3dBCv8OJriNaPlhpyOORjPlz
        5cktVM6RU1eG3gmi5eNfaOi/Dnl0JBT1qKF9+KVojuNBayMq9aeiSS9ZS7R8hJPNA7WgNVE+TtHbweDs
        EG3wtPMFbCvbgwoxaloeitYTLR9uotXeDDl0hOgALEXdCWB1/bvZr8xdEH1xHypaCfawje3PVj9Ap+Mt
        nKSVEjlHuWU/vLMZYVflEVSCoSjRgOJsAlAF8RBVrIYW+jnzyfZJD2B2meF0twoVc2R2yiG+ai8qwlCc
        0wCVr4K46lhIb+Ofqs4kBy1NdeuMCg3Ry2Sl5iSRzJ8sgxzi9PGoCKUk0Ss/+DgK3Y+wkG2kMrwHyDOt
        UjRSoLmrwkUrQBWqQXM7WrRPLnO3Sq27RWMMc7puaqvsUm/qT78JHwcexaCS1VAUqJinJt5HP3AchqfN
        ojEWnVHeIKvtKy/WmRSSSZaYawmoZEXOa0BZvkOyz83BDHBOWyXjDJ+9r4E9RIUldcb/daQ2RUNkhQaX
        YTA3P/ZqrG99vesC8zdQnK9/JoSOOe8B1jJaU3i+QODlv09gLZPZFb6F2XhJKFr1DgQjOppqEopW+Apm
        M01UBFmytkk3KDcxAqufUMiClpafIPXgJNcQFsLcBz0j+y4QL2ebKFOWIWwXqQU/yYbkjTk9CiUrzaMV
        m8nwekhksr8LDms3kCgEAgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="open_cam.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>